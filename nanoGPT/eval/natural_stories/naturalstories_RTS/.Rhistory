rm(list=ls())
library(tidyverse)
b1 = read_csv("batch1_pro.csv")
setwd("~/PycharmProjects/masters_thesis/ss-llm/nanoGPT/eval/natural_stories/naturalstories_RTS")
rm(list=ls())
library(tidyverse)
b1 = read_csv("batch1_pro.csv")
b2 = read_csv("batch2_pro.csv")
words = read_tsv("all_stories.tok")
b = bind_rows(b1, b2)
offset = 230
d = b %>%
filter(!(item == 3 & zone == offset + 1)) %>%
mutate(zone=if_else(item == 3 & zone > offset, zone - 3, zone - 2)) %>%
inner_join(words) %>%
filter(RT > 100, RT < 3000, correct > 4) %>%
arrange(item, zone)
View(d)
gmean <- function(x) exp(mean(log(x)))
gsd   <- function(x) exp(sd(log(x)))
wordinfo = d %>%
group_by(word, zone, item) %>%
summarize(nItem=n(),
meanItemRT=mean(RT),
sdItemRT=sd(RT),
gmeanItemRT=gmean(RT),
gsdItemRT=gsd(RT)) %>%
ungroup()
View(d)
View(b)
View(b1)
d]
d
words
library(plyr)
install.packages("plyr")
library(plyr)
options("repos")[[1]][1]
install.packages("plyr")
options(repos="http://streaming.stat.iastate.edu/CRAN")
install.packages("plyr")
library(dplyr)
library(ggplot2)
#read in RT data from 2 separate files
b2 <- read.csv('batch2_pro.csv')
b1 <- read.csv('batch1_pro.csv')
d <- rbind(b1, b2)
d$zone <- d$zone - 2
#read in story words and region
#item is story (1-10), zone is RT region
word.df <- read.csv('all_stories.tok', sep = '\t')
d <- merge(d, word.df, by= c('item', 'zone'), all.x = T, all.y = T)
#remove regions that do not have words
d <- filter(d, !is.na(word))
#exclude stories where subject does not get more than 4/6 correct
unfiltered <- d
d <- filter(d, correct > 4)
#exclude data points less than 50 ms, greater than 3000 ms
d <- d[d$RT > 100 & d$RT < 3000, ]
d$l <- nchar(as.character(d$word))
#calculate by-word statistics
gmean <- function(x) exp(mean(log(x)))
gsd   <- function(x) exp(sd(log(x)))
word.info = d %>%
group_by(word, zone, item) %>%
summarise(nItem=length(RT),
meanItemRT=mean(RT),
sdItemRT=sd(RT),
gmeanItemRT=sd(RT),
gsdItemRT=gsd(RT))
d <- inner_join(d, word.info, by=c("word", "zone", "item"))
#write processed output, by word, overall
#write.table(word.info, 'processed_wordinfo.tsv', quote = F, row.names=F, sep="\t")
#write.table(d, 'processed_RTs.tsv', quote=F, row.names=F, sep="\t")
ggplot(d, aes(RT)) + facet_grid( . ~ WorkerId) + geom_histogram()
##make plot
make.story.plot <- function(item, group)
{
return (
ggplot(word.info[word.info$item == item & word.info$group == group, ],
aes(x = zone, y = meanItemRT, group = group)) +
geom_line(colour = 'grey') +
geom_text(aes( x = zone, y= meanItemRT, label = word), size = 2) + facet_grid(group~ .) +
theme_bw() + coord_cartesian(ylim = c(min(word.info$meanItemRT), 550)))
}
word.info$group <- cut(word.info$zone, 20, labels = F)
pdf('practice_RTplot.pdf')
for (i in seq(1:20))
print(make.story.plot(1, i))
dev.off()
